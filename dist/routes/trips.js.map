{"version":3,"sources":["../../src/routes/trips.js"],"names":["router","Router","get","req","res","db","collection","page","pagesize","query","parseInt","find","skip","limit","e","docs","json","post","insert","body","uid","destinationCountry","returnCountry","returnDate","Date","err","result","delete","drop","message","module","exports"],"mappings":";;AAAC;;;;;;AACD,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD;AACI;AADJ,CAEKE,GAFL,CAES,GAFT,EAEc,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC1B,QAAIC,KAAKF,IAAIE,EAAb;AACA,QAAIC,aAAaD,GAAGH,GAAH,CAAO,MAAP,CAAjB;;AAEA,QAAIK,OAAO,CAAX;AACA,QAAIC,WAAW,EAAf;AACA,QAAIL,IAAIM,KAAJ,CAAUF,IAAd,EAAoBA,OAAOG,SAASP,IAAIM,KAAJ,CAAUF,IAAnB,CAAP;AACpB,QAAIJ,IAAIM,KAAJ,CAAUD,QAAd,EAAwBA,WAAWE,SAASP,IAAIM,KAAJ,CAAUD,QAAnB,CAAX;AACxBF,eAAWK,IAAX,CAAgB,EAAhB,EAAoB,EAAEC,MAAMJ,YAAYD,OAAO,CAAnB,CAAR,EAA+BM,OAAOL,QAAtC,EAApB,EAAsE,UAAUM,CAAV,EAAaC,IAAb,EAAmB;AACrFX,YAAIY,IAAJ,CAASD,IAAT;AACH,KAFD;AAGH,CAbL;;AAeI;AAfJ,CAgBKE,IAhBL,CAgBU,GAhBV,EAgBe,UAAUd,GAAV,EAAeC,GAAf,EAAoB;AAC3B,QAAIC,KAAKF,IAAIE,EAAb;AACA,QAAIC,aAAaD,GAAGH,GAAH,CAAO,MAAP,CAAjB;;AAEAI,eAAWY,MAAX,CACI;AACI,eAAOf,IAAIgB,IAAJ,CAASC,GADpB;AAEI,8BAAsBjB,IAAIgB,IAAJ,CAASE,kBAFnC;AAGI,yBAAiBlB,IAAIgB,IAAJ,CAASG,aAH9B;AAII,sBAAcnB,IAAIgB,IAAJ,CAASI,UAJ3B;AAKI,oBAAY,IAAIC,IAAJ,EALhB;AAMI,wBAAgB,IAAIA,IAAJ;AANpB,KADJ,EASI,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AACnBtB,YAAIY,IAAJ,CAASU,MAAT;AACH,KAXL;AAYH,CAhCL;;AAkCI;;;;AAlCJ,CAsCKC,MAtCL,CAsCY,WAtCZ,EAsCyB,UAAUxB,GAAV,EAAeC,GAAf,EAAoB;AACrC,QAAIC,KAAKF,IAAIE,EAAb;AACA,QAAIC,aAAaD,GAAGH,GAAH,CAAO,MAAP,CAAjB;AACAI,eAAWsB,IAAX;AACAxB,QAAIY,IAAJ,CAAS,EAAEa,SAAS,WAAX,EAAT;AACH,CA3CL;;AA6CAC,OAAOC,OAAP,GAAiB/B,MAAjB","file":"trips.js","sourcesContent":["ï»¿import express from 'express';\r\nconst router = express.Router();\r\n\r\nrouter\r\n    /* GET list of Trips */\r\n    .get('/', function (req, res) {\r\n        let db = req.db;\r\n        let collection = db.get('trip');\r\n\r\n        let page = 1;\r\n        let pagesize = 30;\r\n        if (req.query.page) page = parseInt(req.query.page);\r\n        if (req.query.pagesize) pagesize = parseInt(req.query.pagesize);\r\n        collection.find({}, { skip: pagesize * (page - 1), limit: pagesize }, function (e, docs) {\r\n            res.json(docs);\r\n        });\r\n    })\r\n\r\n    /* POST a new Trip */\r\n    .post('/', function (req, res) {\r\n        let db = req.db;\r\n        let collection = db.get('trip');\r\n\r\n        collection.insert(\r\n            {\r\n                \"uid\": req.body.uid,\r\n                \"destinationCountry\": req.body.destinationCountry,\r\n                \"returnCountry\": req.body.returnCountry,\r\n                \"returnDate\": req.body.returnDate,\r\n                \"datetime\": new Date(),\r\n                \"lastModified\": new Date()\r\n            },\r\n            function (err, result) {\r\n                res.json(result);\r\n            });\r\n    })\r\n\r\n    /*\r\n\t * DELETE Only to clear junk records, we shouldn't delete any record in\r\n\t * Production\r\n\t */\r\n    .delete('/truncate', function (req, res) {\r\n        let db = req.db;\r\n        let collection = db.get('trip');\r\n        collection.drop();\r\n        res.json({ message: \"truncated\" });\r\n    });\r\n\r\nmodule.exports = router;"]}