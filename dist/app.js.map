{"version":3,"sources":["../src/app.js"],"names":["app","db","set","join","__dirname","use","json","urlencoded","extended","require","middleware","static","req","res","next","header","err","Error","status","get","render","message","error","listen","process","env","PORT","console","log","address","port","settings","module","exports"],"mappings":";;AAAC;;;;AACD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,KAAK,oBAAK,2NAAL,CAAX;;AAEA;AACAD,IAAIE,GAAJ,CAAQ,OAAR,EAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,IAAIE,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEAF,IAAIK,GAAJ,CAAQ,4BAAQD,YAAY,qBAApB,CAAR;AACAJ,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAN,IAAIK,GAAJ,CAAQ,gCAAiB,EAAjB,CAAR;AACAL,IAAIK,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB;AAC7BC,WAAW;AADkB,CAAtB,CAAR;AAGAR,IAAIK,GAAJ,CAAQ,6BAAR;AACAL,IAAIK,GAAJ,CAAQI,QAAQ,QAAR,EAAkBC,UAAlB,CAA6B,eAAKP,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAA7B,CAAR;AACAJ,IAAIK,GAAJ,CAAQ,kBAAQM,MAAR,CAAe,eAAKR,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEAJ,IAAIK,GAAJ,CAAQ,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChCF,KAAIX,EAAJ,GAASA,EAAT;AACAY,KAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,KAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD;AACA,CALD;;AAOAd,IAAIK,GAAJ,CAAQ,GAAR;AACAL,IAAIK,GAAJ,CAAQ,WAAR;AACAL,IAAIK,GAAJ,CAAQ,YAAR;AACAL,IAAIK,GAAJ,CAAQ,aAAR;AACAL,IAAIK,GAAJ,CAAQ,QAAR;;AAEA;AACAL,IAAIK,GAAJ,CAAQ,UAASO,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChC,KAAIE,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,KAAIE,MAAJ,GAAa,GAAb;AACAJ,MAAKE,GAAL;AACA,CAJD;;AAMA;;AAEA;AACA;AACA,IAAIhB,IAAImB,GAAJ,CAAQ,KAAR,MAAmB,aAAvB,EAAsC;AACrCnB,KAAIK,GAAJ,CAAQ,UAASW,GAAT,EAAcJ,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACrCD,MAAIK,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAL,MAAIO,MAAJ,CAAW,OAAX,EAAoB;AACnBC,YAAUL,IAAIK,OADK;AAEnBC,UAAQN;AAFW,GAApB;AAIA,EAND;AAOA;;AAED;AACA;AACAhB,IAAIK,GAAJ,CAAQ,UAASW,GAAT,EAAcJ,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACrCD,KAAIK,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAL,KAAIO,MAAJ,CAAW,OAAX,EAAoB;AACnBC,WAAUL,IAAIK,OADK;AAEnBC,SAAQ;AAFW,EAApB;AAIA,CAND;;AAQAtB,IAAIuB,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,YAAU;AAC7CC,SAAQC,GAAR,CAAY,+BAAZ,EAA6C,KAAKC,OAAL,GAAeC,IAA5D,EAAkE9B,IAAI+B,QAAJ,CAAaN,GAA/E;AACD,CAFD;;AAIAO,OAAOC,OAAP,GAAiBjC,GAAjB","file":"app.js","sourcesContent":["ï»¿import express from 'express';\r\nimport expressValidator from 'express-validator';\r\nimport path from 'path';\r\nimport favicon from 'serve-favicon';\r\nimport logger from 'morgan';\r\nimport cookieParser from 'cookie-parser';\r\nimport bodyParser from 'body-parser';\r\n\r\nimport mongo from 'mongodb';\r\nimport monk from 'monk';\r\nimport routes from './routes/index';\r\nimport requests from './routes/requests';\r\nimport countries from './routes/countries';\r\nimport categories from './routes/categories';\r\nimport trips from './routes/trips';\r\n\r\nconst app = express();\r\nconst db = monk('admin:P%40ssword123@cluster0-shard-00-00-ajvux.mongodb.net:27017,cluster0-shard-00-01-ajvux.mongodb.net:27017,cluster0-shard-00-02-ajvux.mongodb.net:27017/jetspree?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin');\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'jade');\r\n\r\napp.use(favicon(__dirname + '/public/favicon.ico'));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(expressValidator([]));\r\napp.use(bodyParser.urlencoded({\r\n\textended : true\r\n}));\r\napp.use(cookieParser());\r\napp.use(require('stylus').middleware(path.join(__dirname, 'public')));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use(function(req, res, next) {\r\n\treq.db = db;\r\n\tres.header(\"Access-Control-Allow-Origin\", \"*\");\r\n\tres.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n\tnext();\r\n});\r\n\r\napp.use('/', routes);\r\napp.use('/requests', requests);\r\napp.use('/countries', countries);\r\napp.use('/categories', categories);\r\napp.use('/trips', trips);\r\n\r\n// catch 404 and forward to error handler\r\napp.use(function(req, res, next) {\r\n\tvar err = new Error('Not Found');\r\n\terr.status = 404;\r\n\tnext(err);\r\n});\r\n\r\n// error handlers\r\n\r\n// development error handler\r\n// will print stacktrace\r\nif (app.get('env') === 'development') {\r\n\tapp.use(function(err, req, res, next) {\r\n\t\tres.status(err.status || 500);\r\n\t\tres.render('error', {\r\n\t\t\tmessage : err.message,\r\n\t\t\terror : err\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// production error handler\r\n// no stacktraces leaked to user\r\napp.use(function(err, req, res, next) {\r\n\tres.status(err.status || 500);\r\n\tres.render('error', {\r\n\t\tmessage : err.message,\r\n\t\terror : {}\r\n\t});\r\n});\r\n\r\napp.listen(process.env.PORT || 3001, function(){\r\n  console.log(\"Started on port %d in %s mode\", this.address().port, app.settings.env);\r\n});\r\n\r\nmodule.exports = app;\r\n"]}