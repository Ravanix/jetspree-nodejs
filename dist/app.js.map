{"version":3,"sources":["../src/app.js"],"names":["app","db","set","join","__dirname","use","json","urlencoded","extended","require","middleware","static","req","res","next","parsedConnStr","parse","connection_string","dbAuth","auth","split","dbConfig","user","password","host","hostname","port","database","pathname","ssl","secure","pool","header","secret","resave","saveUninitialized","initialize","session","get","authenticate","successRedirect","failureRedirect","err","Error","status","render","message","error","listen","process","env","PORT","console","log","address","settings","module","exports"],"mappings":"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","file":"app.js","sourcesContent":["ï»¿// libraries\r\nimport config from './config';\r\nimport express from 'express';\r\nimport expressSession from 'express-session';\r\nimport expressValidator from 'express-validator';\r\nimport pgPool from 'pg-pool';\r\nimport url from 'url';\r\nimport path from 'path';\r\nimport favicon from 'serve-favicon';\r\nimport logger from 'morgan';\r\nimport cookieParser from 'cookie-parser';\r\nimport bodyParser from 'body-parser';\r\nimport mongo from 'mongodb';\r\nimport monk from 'monk';\r\nimport passport from 'passport';\r\nimport passportSetup from './passport';\r\nimport flash from 'connect-flash';\r\n\r\nimport routes from './routes/index';\r\n// public routes\r\nimport requests from './routes/requests';\r\nimport countries from './routes/countries';\r\nimport categories from './routes/categories';\r\nimport trips from './routes/trips';\r\nimport twitter from './routes/twitter';\r\nimport login from './routes/login';\r\n// private routes\r\nimport authorize from './routes/private/authorize';\r\nimport user from './routes/private/user';\r\n\r\nconst app = express();\r\nconst db = monk('admin:P%40ssword123@cluster0-shard-00-00-ajvux.mongodb.net:27017,cluster0-shard-00-01-ajvux.mongodb.net:27017,cluster0-shard-00-02-ajvux.mongodb.net:27017/jetspree?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin');\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\napp.use(favicon(__dirname + '/public/favicon.ico'));\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(expressValidator([]));\r\napp.use(bodyParser.urlencoded({\r\n\textended: true\r\n}));\r\napp.use(cookieParser());\r\napp.use(require('stylus').middleware(path.join(__dirname, 'public')));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use((req, res, next) => {\r\n\treq.db = db;\r\n\tlet parsedConnStr = url.parse(config.connection_string);\r\n\tlet dbAuth = parsedConnStr.auth.split(':');\r\n\tlet dbConfig = {\r\n\t\tuser: dbAuth[0],\r\n\t\tpassword: dbAuth[1],\r\n\t\thost: parsedConnStr.hostname,\r\n\t\tport: parsedConnStr.port,\r\n\t\tdatabase: parsedConnStr.pathname.split('/')[1],\r\n\t\tssl: req.secure\r\n\t};\r\n\treq.pool = new pgPool(dbConfig);\r\n\tpassportSetup(passport, req.pool);\r\n\tres.header(\"Access-Control-Allow-Origin\", \"*\");\r\n\tres.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n\tnext();\r\n});\r\n\r\n// required for passport\r\napp.use(expressSession({\r\n    secret: config.secret,\r\n    resave: true,\r\n    saveUninitialized: true\r\n}));\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(flash());\r\n\r\n//Facebook Passport Router\r\napp.get('/login/facebook', passport.authenticate('facebook'));\r\napp.get('/login/facebook/callback',\r\n\tpassport.authenticate('facebook', {\r\n\t\tsuccessRedirect: '/login/authenticated',\r\n\t\tfailureRedirect: '/login'\r\n\t}));\r\n\r\napp.use('/', routes);\r\napp.use('/requests', requests);\r\napp.use('/countries', countries);\r\napp.use('/categories', categories);\r\napp.use('/trips', trips);\r\napp.use('/twitter', twitter);\r\napp.use('/login', login);\r\n\r\n// routes that requires login to access\r\nauthorize.use('/user', user);\r\napp.use('/auth', authorize);\r\n\r\n// catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n\tlet err = new Error('Not Found');\r\n\terr.status = 404;\r\n\tnext(err);\r\n});\r\n\r\n// error handlers\r\n\r\n// development error handler\r\n// will print stacktrace\r\nif (app.get('env') === 'development') {\r\n\tapp.use((err, req, res, next) => {\r\n\t\tres.status(err.status || 500);\r\n\t\tres.render('error', {\r\n\t\t\tmessage: err.message,\r\n\t\t\terror: err\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// production error handler\r\n// no stacktraces leaked to user\r\napp.use((err, req, res, next) => {\r\n\tres.status(err.status || 500);\r\n\tres.render('error', {\r\n\t\tmessage: err.message,\r\n\t\terror: {}\r\n\t});\r\n});\r\n\r\napp.listen(process.env.PORT || 3001, function () {\r\n\tconsole.log(\"Started on port %d in %s mode\", this.address().port, app.settings.env);\r\n});\r\n\r\nmodule.exports = app;\r\n"]}