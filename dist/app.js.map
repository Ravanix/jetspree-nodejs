{
  "version": 3,
  "sources": [
    "app.js"
  ],
  "names": [
    "app",
    "queue",
    "createQueue",
    "redis",
    "process",
    "env",
    "REDIS",
    "use",
    "set",
    "join",
    "__dirname",
    "urlencoded",
    "extended",
    "limit",
    "json",
    "require",
    "middleware",
    "static",
    "req",
    "res",
    "next",
    "parsedConnStr",
    "parse",
    "connection_string",
    "dbAuth",
    "auth",
    "split",
    "dbConfig",
    "user",
    "password",
    "host",
    "hostname",
    "port",
    "database",
    "pathname",
    "ssl",
    "secure",
    "pool",
    "config",
    "credentials",
    "Credentials",
    "aws_access_key_id",
    "aws_secret_access_key",
    "setPromisesDependency",
    "aws",
    "header",
    "secret",
    "resave",
    "saveUninitialized",
    "initialize",
    "session",
    "get",
    "authenticate",
    "scope",
    "successRedirect",
    "failureRedirect",
    "create",
    "title",
    "to",
    "template",
    "priority",
    "attempts",
    "save",
    "send",
    "err",
    "Error",
    "status",
    "render",
    "message",
    "error",
    "listen",
    "PORT",
    "console",
    "log",
    "address",
    "settings",
    "module",
    "exports"
  ],
  "mappings": "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",
  "file": "app.js",
  "sourcesContent": [
    "// libraries\r\nimport \"babel-polyfill\";\r\nimport config from \"./config\";\r\nimport express from \"express\";\r\nimport cors from \"cors\";\r\nimport expressSession from \"express-session\";\r\nimport expressValidator from \"express-validator\";\r\nimport helmet from \"helmet\";\r\nimport PgPool from \"pg-pool\";\r\nimport url from \"url\";\r\nimport path from \"path\";\r\nimport favicon from \"serve-favicon\";\r\nimport logger from \"morgan\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport bodyParser from \"body-parser\";\r\nimport passport from \"passport\";\r\nimport passportSetup from \"./passport\";\r\nimport flash from \"connect-flash\";\r\nimport aws from \"aws-sdk\";\r\nimport Promise from \"bluebird\";\r\nimport kue from \"kue\";\r\n// index routes\r\nimport indexV1 from \"./routes/index\";\r\n// public routes\r\nimport countries from \"./routes/countries\";\r\nimport twitter from \"./routes/twitter\";\r\nimport login from \"./routes/login\";\r\nimport requests from \"./routes/requests\";\r\nimport images from \"./routes/image\";\r\nimport trips from \"./routes/trips\";\r\n// private routes\r\nimport authorize from \"./routes/private/authorize\";\r\nimport authUser from \"./routes/private/user\";\r\nimport authRequests from \"./routes/private/requests\";\r\nimport authTrips from \"./routes/private/trips\";\r\nimport authImages from \"./routes/private/images\";\r\n\r\nconst app = express();\r\n\r\nconst queue = kue.createQueue({\r\n    redis: process.env.REDIS\r\n});\r\n\r\napp.use(helmet());\r\napp.use(cors());\r\n\r\n// view engine setup\r\napp.set('views', path.join(__dirname, 'views'));\r\napp.set('view engine', 'pug');\r\n\r\napp.use(favicon(__dirname + '/public/favicon.ico'));\r\napp.use(logger('dev'));\r\napp.use(expressValidator([]));\r\napp.use(bodyParser.urlencoded({extended: true, limit: '50mb'}));\r\napp.use(bodyParser.json({limit: '50mb'}));\r\napp.use(cookieParser());\r\napp.use(require('stylus').middleware(path.join(__dirname, 'public')));\r\napp.use(express.static(path.join(__dirname, 'public')));\r\n\r\napp.use((req, res, next) => {\r\n    let parsedConnStr = url.parse(config.connection_string);\r\n    let dbAuth = parsedConnStr.auth.split(':');\r\n    let dbConfig = {\r\n        user: dbAuth[0],\r\n        password: dbAuth[1],\r\n        host: parsedConnStr.hostname,\r\n        port: parsedConnStr.port,\r\n        database: parsedConnStr.pathname.split('/')[1],\r\n        ssl: req.secure\r\n    };\r\n    req.pool = new PgPool(dbConfig);\r\n    passportSetup(passport, req.pool);\r\n    aws.config = {\r\n        credentials: new aws.Credentials(config.aws_access_key_id, config.aws_secret_access_key),\r\n        setPromisesDependency: Promise\r\n    };\r\n    req.aws = aws;\r\n    req.queue = queue;\r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n    next();\r\n});\r\n\r\n// required for passport\r\napp.use(expressSession({\r\n    secret: config.secret,\r\n    resave: true,\r\n    saveUninitialized: true\r\n}));\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(flash());\r\n\r\napp.use('/v1', indexV1);\r\n\r\n//Facebook Passport Router\r\nindexV1.get('/login/facebook', passport.authenticate('facebook', {scope: 'email'}));\r\nindexV1.get('/login/facebook/callback',\r\n    passport.authenticate('facebook', {\r\n        successRedirect: '/v1/login/authenticated',\r\n        failureRedirect: '/v1/login'\r\n    }));\r\n\r\n//Google Passport Router\r\nindexV1.get('/login/google', passport.authenticate('google', {scope: ['profile', 'email']}));\r\nindexV1.get('/login/google/callback',\r\n    passport.authenticate('google', {\r\n        successRedirect: '/v1/login/authenticated',\r\n        failureRedirect: '/v1/login'\r\n    }));\r\n\r\nindexV1.use('/countries', countries);\r\nindexV1.use('/twitter', twitter);\r\nindexV1.use('/login', login);\r\nindexV1.use('/requests', requests);\r\nindexV1.use('/images', images);\r\nindexV1.use('/trips', trips);\r\nindexV1.use('/send', function (req, res, next) {\r\n    req.queue.create('email', {\r\n        title: 'Account renewal required'\r\n        , to: 'tj@learnboost.com'\r\n        , template: 'renewal-email'\r\n    }).priority('medium').attempts(5).save();\r\n    return res.send(\"sendEmail triggered\");\r\n});\r\n\r\n// routes that requires login to access\r\nauthorize.use('/user', authUser);\r\nauthorize.use('/requests', authRequests);\r\nauthorize.use('/trips', authTrips);\r\nauthorize.use('/images', authImages);\r\nindexV1.use('/auth', authorize);\r\n\r\n// catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n    let err = new Error('Not Found');\r\n    err.status = 404;\r\n    next(err);\r\n});\r\n\r\n// error handlers\r\n\r\n// development error handler\r\n// will print stacktrace\r\nif (app.get('env') === 'development') {\r\n    app.use((err, req, res) => {\r\n        res.status(err.status || 500);\r\n        res.render('error', {\r\n            message: err.message,\r\n            error: err\r\n        });\r\n    });\r\n}\r\n\r\n// production error handler\r\n// no stacktraces leaked to user\r\napp.use((err, req, res) => {\r\n    res.status(err.status || 500);\r\n    res.render('error', {\r\n        message: err.message,\r\n        error: {}\r\n    });\r\n});\r\n\r\napp.listen(process.env.PORT || 3001, function () {\r\n    console.log(\"Started on port %d in %s mode\", this.address().port, app.settings.env);\r\n});\r\n\r\nmodule.exports = app;\r\n"
  ]
}